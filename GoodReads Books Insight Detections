{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "897b5aa6",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:03.691778Z",
     "iopub.status.busy": "2024-04-21T16:49:03.691181Z",
     "iopub.status.idle": "2024-04-21T16:49:04.695591Z",
     "shell.execute_reply": "2024-04-21T16:49:04.694293Z"
    },
    "papermill": {
     "duration": 1.015374,
     "end_time": "2024-04-21T16:49:04.698054",
     "exception": false,
     "start_time": "2024-04-21T16:49:03.682680",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/good-reads-top-1000-books/good_reads_top_1000_books.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1f5433f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.711864Z",
     "iopub.status.busy": "2024-04-21T16:49:04.711385Z",
     "iopub.status.idle": "2024-04-21T16:49:04.734704Z",
     "shell.execute_reply": "2024-04-21T16:49:04.733429Z"
    },
    "papermill": {
     "duration": 0.033376,
     "end_time": "2024-04-21T16:49:04.737509",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.704133",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "books_df = pd.read_csv('/kaggle/input/good-reads-top-1000-books/good_reads_top_1000_books.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "35194076",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.751115Z",
     "iopub.status.busy": "2024-04-21T16:49:04.750323Z",
     "iopub.status.idle": "2024-04-21T16:49:04.778082Z",
     "shell.execute_reply": "2024-04-21T16:49:04.776433Z"
    },
    "papermill": {
     "duration": 0.037284,
     "end_time": "2024-04-21T16:49:04.780700",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.743416",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Book Name</th>\n",
       "      <th>Author</th>\n",
       "      <th>Average Rating</th>\n",
       "      <th>Number of Ratings</th>\n",
       "      <th>Score on Goodreads</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>To Kill a Mockingbird</td>\n",
       "      <td>Harper Lee</td>\n",
       "      <td>4.26</td>\n",
       "      <td>6129090</td>\n",
       "      <td>17358.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1984</td>\n",
       "      <td>George Orwell</td>\n",
       "      <td>4.19</td>\n",
       "      <td>4604557</td>\n",
       "      <td>15474.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Pride and Prejudice</td>\n",
       "      <td>Jane Austen</td>\n",
       "      <td>4.29</td>\n",
       "      <td>4273146</td>\n",
       "      <td>15135.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Harry Potter and the Sorcerer's Stone (Harry P...</td>\n",
       "      <td>J.K. Rowling</td>\n",
       "      <td>4.47</td>\n",
       "      <td>10063128</td>\n",
       "      <td>12440.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>The Great Gatsby</td>\n",
       "      <td>F. Scott Fitzgerald</td>\n",
       "      <td>3.93</td>\n",
       "      <td>5244056</td>\n",
       "      <td>10828.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           Book Name               Author  \\\n",
       "0                              To Kill a Mockingbird           Harper Lee   \n",
       "1                                               1984        George Orwell   \n",
       "2                                Pride and Prejudice          Jane Austen   \n",
       "3  Harry Potter and the Sorcerer's Stone (Harry P...         J.K. Rowling   \n",
       "4                                   The Great Gatsby  F. Scott Fitzgerald   \n",
       "\n",
       "   Average Rating  Number of Ratings  Score on Goodreads  \n",
       "0            4.26            6129090             17358.0  \n",
       "1            4.19            4604557             15474.0  \n",
       "2            4.29            4273146             15135.0  \n",
       "3            4.47           10063128             12440.0  \n",
       "4            3.93            5244056             10828.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "books_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "501510a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.795485Z",
     "iopub.status.busy": "2024-04-21T16:49:04.794775Z",
     "iopub.status.idle": "2024-04-21T16:49:04.822582Z",
     "shell.execute_reply": "2024-04-21T16:49:04.821435Z"
    },
    "papermill": {
     "duration": 0.038107,
     "end_time": "2024-04-21T16:49:04.825043",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.786936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1017 entries, 0 to 1016\n",
      "Data columns (total 5 columns):\n",
      " #   Column              Non-Null Count  Dtype  \n",
      "---  ------              --------------  -----  \n",
      " 0   Book Name           1017 non-null   object \n",
      " 1   Author              1017 non-null   object \n",
      " 2   Average Rating      1017 non-null   float64\n",
      " 3   Number of Ratings   1017 non-null   int64  \n",
      " 4   Score on Goodreads  1017 non-null   float64\n",
      "dtypes: float64(2), int64(1), object(2)\n",
      "memory usage: 39.9+ KB\n"
     ]
    }
   ],
   "source": [
    "books_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4ec677b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.839650Z",
     "iopub.status.busy": "2024-04-21T16:49:04.839272Z",
     "iopub.status.idle": "2024-04-21T16:49:04.846460Z",
     "shell.execute_reply": "2024-04-21T16:49:04.845175Z"
    },
    "papermill": {
     "duration": 0.017189,
     "end_time": "2024-04-21T16:49:04.848503",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.831314",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1017, 5)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "books_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f57a62b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.863165Z",
     "iopub.status.busy": "2024-04-21T16:49:04.862714Z",
     "iopub.status.idle": "2024-04-21T16:49:04.872565Z",
     "shell.execute_reply": "2024-04-21T16:49:04.871370Z"
    },
    "papermill": {
     "duration": 0.020369,
     "end_time": "2024-04-21T16:49:04.875261",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.854892",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Book Name             0\n",
       "Author                0\n",
       "Average Rating        0\n",
       "Number of Ratings     0\n",
       "Score on Goodreads    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "books_df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5f3be7e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.891812Z",
     "iopub.status.busy": "2024-04-21T16:49:04.890995Z",
     "iopub.status.idle": "2024-04-21T16:49:04.898103Z",
     "shell.execute_reply": "2024-04-21T16:49:04.896769Z"
    },
    "papermill": {
     "duration": 0.01809,
     "end_time": "2024-04-21T16:49:04.900374",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.882284",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No. of Author in the list: 685\n"
     ]
    }
   ],
   "source": [
    "print(\"No. of Author in the list:\", books_df.Author.nunique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "47892c8d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.914721Z",
     "iopub.status.busy": "2024-04-21T16:49:04.914324Z",
     "iopub.status.idle": "2024-04-21T16:49:04.922203Z",
     "shell.execute_reply": "2024-04-21T16:49:04.920927Z"
    },
    "papermill": {
     "duration": 0.017596,
     "end_time": "2024-04-21T16:49:04.924380",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.906784",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "optional = books_df.groupby('Author')['Book Name'].agg(No_Books='count')#.sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e1027291",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.939248Z",
     "iopub.status.busy": "2024-04-21T16:49:04.938816Z",
     "iopub.status.idle": "2024-04-21T16:49:04.946359Z",
     "shell.execute_reply": "2024-04-21T16:49:04.945209Z"
    },
    "papermill": {
     "duration": 0.017736,
     "end_time": "2024-04-21T16:49:04.948668",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.930932",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "optional = optional[optional['No_Books']>3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "95435057",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.964949Z",
     "iopub.status.busy": "2024-04-21T16:49:04.964232Z",
     "iopub.status.idle": "2024-04-21T16:49:04.971870Z",
     "shell.execute_reply": "2024-04-21T16:49:04.970819Z"
    },
    "papermill": {
     "duration": 0.017959,
     "end_time": "2024-04-21T16:49:04.974061",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.956102",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Agatha Christie',\n",
       " 'André Gide',\n",
       " 'Anthony Powell',\n",
       " 'Charles Dickens',\n",
       " 'Cormac McCarthy',\n",
       " 'D.H. Lawrence',\n",
       " 'Dashiell Hammett',\n",
       " 'Elizabeth Gaskell',\n",
       " 'Evelyn Waugh',\n",
       " 'Fyodor Dostoevsky',\n",
       " 'George Eliot',\n",
       " 'Graham Greene',\n",
       " 'H.G. Wells',\n",
       " 'Henry James',\n",
       " 'Honoré de Balzac',\n",
       " 'J.G. Ballard',\n",
       " 'Jane Austen',\n",
       " 'John Updike',\n",
       " 'Joseph Conrad',\n",
       " 'Mark Twain',\n",
       " 'Michael Dibdin',\n",
       " 'Muriel Spark',\n",
       " 'P.G. Wodehouse',\n",
       " 'Saul Bellow',\n",
       " 'Thomas Hardy',\n",
       " 'Thomas Mann',\n",
       " 'Thomas Pynchon',\n",
       " 'Tobias Smollett',\n",
       " 'Ursula K. Le Guin',\n",
       " 'Vladimir Nabokov',\n",
       " 'Willa Cather',\n",
       " 'Émile Zola']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Top_Writers_list=optional.index.tolist()\n",
    "Top_Writers_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2737f3b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:04.989093Z",
     "iopub.status.busy": "2024-04-21T16:49:04.988700Z",
     "iopub.status.idle": "2024-04-21T16:49:04.995204Z",
     "shell.execute_reply": "2024-04-21T16:49:04.994089Z"
    },
    "papermill": {
     "duration": 0.017037,
     "end_time": "2024-04-21T16:49:04.997963",
     "exception": false,
     "start_time": "2024-04-21T16:49:04.980926",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Top_Writers_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4ee7ad51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.013847Z",
     "iopub.status.busy": "2024-04-21T16:49:05.013245Z",
     "iopub.status.idle": "2024-04-21T16:49:05.026645Z",
     "shell.execute_reply": "2024-04-21T16:49:05.025040Z"
    },
    "papermill": {
     "duration": 0.02393,
     "end_time": "2024-04-21T16:49:05.028927",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.004997",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Books_of_topWriters = books_df[books_df['Author'].isin(Top_Writers_list)].reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b6c8c2bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.044127Z",
     "iopub.status.busy": "2024-04-21T16:49:05.043759Z",
     "iopub.status.idle": "2024-04-21T16:49:05.057593Z",
     "shell.execute_reply": "2024-04-21T16:49:05.056348Z"
    },
    "papermill": {
     "duration": 0.024958,
     "end_time": "2024-04-21T16:49:05.060640",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.035682",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>Book Name</th>\n",
       "      <th>Author</th>\n",
       "      <th>Average Rating</th>\n",
       "      <th>Number of Ratings</th>\n",
       "      <th>Score on Goodreads</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>Pride and Prejudice</td>\n",
       "      <td>Jane Austen</td>\n",
       "      <td>4.29</td>\n",
       "      <td>4273146</td>\n",
       "      <td>15135.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15</td>\n",
       "      <td>Crime and Punishment</td>\n",
       "      <td>Fyodor Dostoevsky</td>\n",
       "      <td>4.27</td>\n",
       "      <td>905025</td>\n",
       "      <td>7116.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>20</td>\n",
       "      <td>The Adventures of Huckleberry Finn</td>\n",
       "      <td>Mark Twain</td>\n",
       "      <td>3.83</td>\n",
       "      <td>1266004</td>\n",
       "      <td>6432.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>Great Expectations</td>\n",
       "      <td>Charles Dickens</td>\n",
       "      <td>3.79</td>\n",
       "      <td>803182</td>\n",
       "      <td>5961.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32</td>\n",
       "      <td>Sense and Sensibility</td>\n",
       "      <td>Jane Austen</td>\n",
       "      <td>4.08</td>\n",
       "      <td>1190719</td>\n",
       "      <td>4828.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   index                           Book Name             Author  \\\n",
       "0      2                 Pride and Prejudice        Jane Austen   \n",
       "1     15                Crime and Punishment  Fyodor Dostoevsky   \n",
       "2     20  The Adventures of Huckleberry Finn         Mark Twain   \n",
       "3     23                  Great Expectations    Charles Dickens   \n",
       "4     32               Sense and Sensibility        Jane Austen   \n",
       "\n",
       "   Average Rating  Number of Ratings  Score on Goodreads  \n",
       "0            4.29            4273146             15135.0  \n",
       "1            4.27             905025              7116.0  \n",
       "2            3.83            1266004              6432.0  \n",
       "3            3.79             803182              5961.0  \n",
       "4            4.08            1190719              4828.0  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Books_of_topWriters.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3ed2857c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.079438Z",
     "iopub.status.busy": "2024-04-21T16:49:05.078906Z",
     "iopub.status.idle": "2024-04-21T16:49:05.088574Z",
     "shell.execute_reply": "2024-04-21T16:49:05.086575Z"
    },
    "papermill": {
     "duration": 0.02316,
     "end_time": "2024-04-21T16:49:05.091492",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.068332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Rating of All Books: 3.867099311701082\n",
      "Mean Rating of Books from Top Writers: 3.8641772151898732\n"
     ]
    }
   ],
   "source": [
    "All_booksMeanRate = books_df['Average Rating'].mean()\n",
    "topWriters_booksMeanRate = Books_of_topWriters['Average Rating'].mean()\n",
    "\n",
    "print('Mean Rating of All Books:', All_booksMeanRate)\n",
    "print('Mean Rating of Books from Top Writers:', topWriters_booksMeanRate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "cb59c5f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.107795Z",
     "iopub.status.busy": "2024-04-21T16:49:05.107382Z",
     "iopub.status.idle": "2024-04-21T16:49:05.113892Z",
     "shell.execute_reply": "2024-04-21T16:49:05.113057Z"
    },
    "papermill": {
     "duration": 0.017706,
     "end_time": "2024-04-21T16:49:05.116220",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.098514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Max Rating of All Books: 4.6\n",
      "Max Rating of Books from Top Writers: 4.41\n"
     ]
    }
   ],
   "source": [
    "MaxRating_AllBooks = books_df['Average Rating'].max()\n",
    "MaxRating_Books_topWriters=Books_of_topWriters['Average Rating'].max()\n",
    "\n",
    "print('Max Rating of All Books:', MaxRating_AllBooks)\n",
    "print('Max Rating of Books from Top Writers:', MaxRating_Books_topWriters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b08d26fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.132084Z",
     "iopub.status.busy": "2024-04-21T16:49:05.131680Z",
     "iopub.status.idle": "2024-04-21T16:49:05.138125Z",
     "shell.execute_reply": "2024-04-21T16:49:05.136961Z"
    },
    "papermill": {
     "duration": 0.017291,
     "end_time": "2024-04-21T16:49:05.140556",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.123265",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Min Rating of All Books: 2.71\n",
      "Min Rating of Books from Top Writers: 3.23\n"
     ]
    }
   ],
   "source": [
    "MinRating_AllBooks = books_df['Average Rating'].min()\n",
    "MinRating_Books_topWriters=Books_of_topWriters['Average Rating'].min()\n",
    "\n",
    "print('Min Rating of All Books:', MinRating_AllBooks)\n",
    "print('Min Rating of Books from Top Writers:', MinRating_Books_topWriters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "21b92d37",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.160217Z",
     "iopub.status.busy": "2024-04-21T16:49:05.159816Z",
     "iopub.status.idle": "2024-04-21T16:49:05.167642Z",
     "shell.execute_reply": "2024-04-21T16:49:05.166441Z"
    },
    "papermill": {
     "duration": 0.020539,
     "end_time": "2024-04-21T16:49:05.170221",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.149682",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name of the highest Rated Book: The Devil to Pay in the Backlands\n",
      "Author of the highest Rated Book: João Guimarães Rosa\n"
     ]
    }
   ],
   "source": [
    "Highest_RatedBook = books_df[books_df['Average Rating']==MaxRating_AllBooks]['Book Name'].values[0]\n",
    "Writer_of_HighestRatedBook = books_df[books_df['Average Rating']==MaxRating_AllBooks]['Author'].values[0]\n",
    "\n",
    "print(\"Name of the highest Rated Book:\",Highest_RatedBook)\n",
    "print(\"Author of the highest Rated Book:\", Writer_of_HighestRatedBook)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "344ceb0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.187121Z",
     "iopub.status.busy": "2024-04-21T16:49:05.186702Z",
     "iopub.status.idle": "2024-04-21T16:49:05.202162Z",
     "shell.execute_reply": "2024-04-21T16:49:05.200638Z"
    },
    "papermill": {
     "duration": 0.026788,
     "end_time": "2024-04-21T16:49:05.204729",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.177941",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Book Name</th>\n",
       "      <th>Author</th>\n",
       "      <th>Average Rating</th>\n",
       "      <th>Number of Ratings</th>\n",
       "      <th>Score on Goodreads</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>944</th>\n",
       "      <td>The Devil to Pay in the Backlands</td>\n",
       "      <td>João Guimarães Rosa</td>\n",
       "      <td>4.6</td>\n",
       "      <td>5382</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Book Name               Author  Average Rating  \\\n",
       "944  The Devil to Pay in the Backlands  João Guimarães Rosa             4.6   \n",
       "\n",
       "     Number of Ratings  Score on Goodreads  \n",
       "944               5382                25.0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "books_df[books_df['Author']==Writer_of_HighestRatedBook]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "63d8d451",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.222218Z",
     "iopub.status.busy": "2024-04-21T16:49:05.221818Z",
     "iopub.status.idle": "2024-04-21T16:49:05.230491Z",
     "shell.execute_reply": "2024-04-21T16:49:05.229242Z"
    },
    "papermill": {
     "duration": 0.020845,
     "end_time": "2024-04-21T16:49:05.232869",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.212024",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name of the highest Rated Book: Moon Over Africa\n",
      "Author of the highest Rated Book: Ida Pollock\n"
     ]
    }
   ],
   "source": [
    "Lowest_RatedBook = books_df[books_df['Average Rating']==MinRating_AllBooks]['Book Name'].values[0]\n",
    "Writer_of_LowestRatedBook = books_df[books_df['Average Rating']==MinRating_AllBooks]['Author'].values[0]\n",
    "\n",
    "print(\"Name of the highest Rated Book:\",Lowest_RatedBook)\n",
    "print(\"Author of the highest Rated Book:\", Writer_of_LowestRatedBook)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "aacca156",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.250407Z",
     "iopub.status.busy": "2024-04-21T16:49:05.249693Z",
     "iopub.status.idle": "2024-04-21T16:49:05.263539Z",
     "shell.execute_reply": "2024-04-21T16:49:05.262510Z"
    },
    "papermill": {
     "duration": 0.02561,
     "end_time": "2024-04-21T16:49:05.266019",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.240409",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Book Name</th>\n",
       "      <th>Author</th>\n",
       "      <th>Average Rating</th>\n",
       "      <th>Number of Ratings</th>\n",
       "      <th>Score on Goodreads</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>Moon Over Africa</td>\n",
       "      <td>Ida Pollock</td>\n",
       "      <td>2.71</td>\n",
       "      <td>21</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Book Name       Author  Average Rating  Number of Ratings  \\\n",
       "600  Moon Over Africa  Ida Pollock            2.71                 21   \n",
       "\n",
       "     Score on Goodreads  \n",
       "600                97.0  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "books_df[books_df['Author']==Writer_of_LowestRatedBook]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f70d7a4d",
   "metadata": {
    "papermill": {
     "duration": 0.008443,
     "end_time": "2024-04-21T16:49:05.282965",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.274522",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "57847a0f",
   "metadata": {
    "papermill": {
     "duration": 0.007833,
     "end_time": "2024-04-21T16:49:05.299300",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.291467",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4bd99cd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-21T16:49:05.317380Z",
     "iopub.status.busy": "2024-04-21T16:49:05.316976Z",
     "iopub.status.idle": "2024-04-21T16:49:07.106963Z",
     "shell.execute_reply": "2024-04-21T16:49:07.105710Z"
    },
    "papermill": {
     "duration": 1.802289,
     "end_time": "2024-04-21T16:49:07.109570",
     "exception": false,
     "start_time": "2024-04-21T16:49:05.307281",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assuming books_df['Rating'] contains your ratings data\n",
    "sns.boxplot(x=books_df['Average Rating'])\n",
    "plt.xlabel('Rating')\n",
    "plt.title('Boxplot of Ratings')\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4819741,
     "sourceId": 8149618,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.006115,
   "end_time": "2024-04-21T16:49:07.739337",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-04-21T16:49:00.733222",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

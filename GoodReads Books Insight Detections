{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8149618,"sourceType":"datasetVersion","datasetId":4819741}],"dockerImageVersionId":30702,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-19T14:12:57.326358Z","iopub.execute_input":"2024-04-19T14:12:57.326768Z","iopub.status.idle":"2024-04-19T14:12:58.407546Z","shell.execute_reply.started":"2024-04-19T14:12:57.326734Z","shell.execute_reply":"2024-04-19T14:12:58.406429Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/good-reads-top-1000-books/good_reads_top_1000_books.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"books_df = pd.read_csv('/kaggle/input/good-reads-top-1000-books/good_reads_top_1000_books.csv')","metadata":{"execution":{"iopub.status.busy":"2024-04-19T14:14:37.749410Z","iopub.execute_input":"2024-04-19T14:14:37.749969Z","iopub.status.idle":"2024-04-19T14:14:37.782748Z","shell.execute_reply.started":"2024-04-19T14:14:37.749938Z","shell.execute_reply":"2024-04-19T14:14:37.781802Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"books_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T14:14:48.029248Z","iopub.execute_input":"2024-04-19T14:14:48.030365Z","iopub.status.idle":"2024-04-19T14:14:48.050554Z","shell.execute_reply.started":"2024-04-19T14:14:48.030327Z","shell.execute_reply":"2024-04-19T14:14:48.049170Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"                                           Book Name               Author  \\\n0                              To Kill a Mockingbird           Harper Lee   \n1                                               1984        George Orwell   \n2                                Pride and Prejudice          Jane Austen   \n3  Harry Potter and the Sorcerer's Stone (Harry P...         J.K. Rowling   \n4                                   The Great Gatsby  F. Scott Fitzgerald   \n\n   Average Rating  Number of Ratings  Score on Goodreads  \n0            4.26            6129090             17358.0  \n1            4.19            4604557             15474.0  \n2            4.29            4273146             15135.0  \n3            4.47           10063128             12440.0  \n4            3.93            5244056             10828.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Book Name</th>\n      <th>Author</th>\n      <th>Average Rating</th>\n      <th>Number of Ratings</th>\n      <th>Score on Goodreads</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>To Kill a Mockingbird</td>\n      <td>Harper Lee</td>\n      <td>4.26</td>\n      <td>6129090</td>\n      <td>17358.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1984</td>\n      <td>George Orwell</td>\n      <td>4.19</td>\n      <td>4604557</td>\n      <td>15474.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Pride and Prejudice</td>\n      <td>Jane Austen</td>\n      <td>4.29</td>\n      <td>4273146</td>\n      <td>15135.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Harry Potter and the Sorcerer's Stone (Harry P...</td>\n      <td>J.K. Rowling</td>\n      <td>4.47</td>\n      <td>10063128</td>\n      <td>12440.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>The Great Gatsby</td>\n      <td>F. Scott Fitzgerald</td>\n      <td>3.93</td>\n      <td>5244056</td>\n      <td>10828.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"books_df.info()","metadata":{"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1017 entries, 0 to 1016\nData columns (total 5 columns):\n #   Column              Non-Null Count  Dtype  \n---  ------              --------------  -----  \n 0   Book Name           1017 non-null   object \n 1   Author              1017 non-null   object \n 2   Average Rating      1017 non-null   float64\n 3   Number of Ratings   1017 non-null   int64  \n 4   Score on Goodreads  1017 non-null   float64\ndtypes: float64(2), int64(1), object(2)\nmemory usage: 39.9+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"books_df.shape","metadata":{"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"(1017, 5)"},"metadata":{}}]},{"cell_type":"code","source":"books_df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-19T14:16:39.037403Z","iopub.execute_input":"2024-04-19T14:16:39.037864Z","iopub.status.idle":"2024-04-19T14:16:39.046148Z","shell.execute_reply.started":"2024-04-19T14:16:39.037828Z","shell.execute_reply":"2024-04-19T14:16:39.045224Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"Book Name             0\nAuthor                0\nAverage Rating        0\nNumber of Ratings     0\nScore on Goodreads    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"print(\"No. of Author in the list:\", books_df.Author.nunique())","metadata":{"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"No. of Author in the list: 685\n","output_type":"stream"}]},{"cell_type":"code","source":"books_df.groupby('Author')['Book Name'].count().sort_values(ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-04-19T14:30:04.344151Z","iopub.execute_input":"2024-04-19T14:30:04.345168Z","iopub.status.idle":"2024-04-19T14:30:04.355726Z","shell.execute_reply.started":"2024-04-19T14:30:04.345132Z","shell.execute_reply":"2024-04-19T14:30:04.354420Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"Author\nCharles Dickens      9\nEvelyn Waugh         8\nGraham Greene        8\nJane Austen          6\nJoseph Conrad        6\n                    ..\nJohn Dickson Carr    1\nJohn Cowper Powys    1\nJohn Cheever         1\nCesare Pavese        1\nA.G. Macdonell       1\nName: Book Name, Length: 685, dtype: int64"},"metadata":{}}]}]}